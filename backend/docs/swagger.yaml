basePath: /v1
definitions:
  main.File:
    properties:
      contentType:
        type: string
      downloadLink:
        type: string
      modTime:
        type: string
      name:
        type: string
      size:
        type: integer
      tags:
        type: string
    type: object
  main.WeatherResponse:
    properties:
      description:
        type: string
      temperature:
        type: number
    type: object
host: localhost:3000
info:
  contact:
    email: Your Email
  description: API de météo en fonction de la localisation
  termsOfService: http://swagger.io/terms/
  title: Weather API
  version: "1.0"
paths:
  /api/v1/weather:
    get:
      consumes:
      - application/json
      description: Récupère les informations météorologiques actuelles en fonction
        de la latitude et de la longitude
      operationId: get-weather
      parameters:
      - description: Latitude
        in: query
        maximum: 90
        minimum: -90
        name: lat
        required: true
        type: number
      - description: Longitude
        in: query
        maximum: 180
        minimum: -180
        name: lon
        required: true
        type: number
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.WeatherResponse'
      summary: Obtenir la météo actuelle en fonction de la localisation
  /files:
    get:
      description: Get a list of all files with details
      operationId: get-all-files
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/main.File'
            type: array
      summary: Get all files
    post:
      consumes:
      - multipart/form-data
      description: Ajoute un fichier dans le bucket Minio
      operationId: add-file
      parameters:
      - description: Fichier à ajouter
        in: formData
        name: file
        required: true
        type: file
      responses:
        "200":
          description: Fichier ajouté avec succès
          schema:
            type: string
      summary: Ajouter un fichier
  /files/{name}:
    delete:
      description: Supprime un fichier du bucket Minio
      operationId: delete-file
      parameters:
      - description: Nom du fichier à supprimer
        in: path
        name: name
        required: true
        type: string
      responses:
        "200":
          description: Fichier supprimé avec succès
          schema:
            type: string
      summary: Supprimer un fichier
    put:
      consumes:
      - multipart/form-data
      description: Modifie un fichier dans le bucket Minio
      operationId: update-file
      parameters:
      - description: Nouvelle version du fichier
        in: formData
        name: file
        required: true
        type: file
      - description: Nom du fichier à modifier
        in: path
        name: name
        required: true
        type: string
      responses:
        "200":
          description: Fichier modifié avec succès
          schema:
            type: string
      summary: Modifier un fichier
schemes:
- http
swagger: "2.0"
