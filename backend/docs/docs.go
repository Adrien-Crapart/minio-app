// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "email": "Your Email"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/v1/weather": {
            "get": {
                "description": "Récupère les informations météorologiques actuelles en fonction de la latitude et de la longitude",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Obtenir la météo actuelle en fonction de la localisation",
                "operationId": "get-weather",
                "parameters": [
                    {
                        "maximum": 90,
                        "minimum": -90,
                        "type": "number",
                        "description": "Latitude",
                        "name": "lat",
                        "in": "query",
                        "required": true
                    },
                    {
                        "maximum": 180,
                        "minimum": -180,
                        "type": "number",
                        "description": "Longitude",
                        "name": "lon",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/main.WeatherResponse"
                        }
                    }
                }
            }
        },
        "/files": {
            "get": {
                "description": "Get a list of all files with details",
                "produces": [
                    "application/json"
                ],
                "summary": "Get all files",
                "operationId": "get-all-files",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main.File"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Ajoute un fichier dans le bucket Minio",
                "consumes": [
                    "multipart/form-data"
                ],
                "summary": "Ajouter un fichier",
                "operationId": "add-file",
                "parameters": [
                    {
                        "type": "file",
                        "description": "Fichier à ajouter",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Fichier ajouté avec succès",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/files/{name}": {
            "put": {
                "description": "Modifie un fichier dans le bucket Minio",
                "consumes": [
                    "multipart/form-data"
                ],
                "summary": "Modifier un fichier",
                "operationId": "update-file",
                "parameters": [
                    {
                        "type": "file",
                        "description": "Nouvelle version du fichier",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Nom du fichier à modifier",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Fichier modifié avec succès",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "Supprime un fichier du bucket Minio",
                "summary": "Supprimer un fichier",
                "operationId": "delete-file",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Nom du fichier à supprimer",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Fichier supprimé avec succès",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "main.File": {
            "type": "object",
            "properties": {
                "contentType": {
                    "type": "string"
                },
                "downloadLink": {
                    "type": "string"
                },
                "modTime": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "size": {
                    "type": "integer"
                },
                "tags": {
                    "type": "string"
                }
            }
        },
        "main.WeatherResponse": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "temperature": {
                    "type": "number"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:3000",
	BasePath:         "/v1",
	Schemes:          []string{"http"},
	Title:            "Weather API",
	Description:      "API de météo en fonction de la localisation",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
